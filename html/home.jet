<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css"
        integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the home page</h1>
                <hr>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>

                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>

                <div class="form-group">
                    <label for="message">Message</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                    <button class="btn btn-outline-secondary mt-4" id="send_btn">Send message</button>
                </div>

                <input type="hidden" name="action" id="action">

                <hr>

                <div class="chatbox" id="output"></div>
            </div>
            <div class="col-md-4">
                <h3>Who's online</h3>
                <ul id="online_users"></ul>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
        integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous">
    </script>
</body>


<script>
    let socket = null;

    window.onbeforeunload = () => {
        console.log("Leaving");
        let req = {
            action: "LOG_OFF"
        };
        socket.send(JSON.stringify(req))
    };

    document.addEventListener("DOMContentLoaded", () => {
        socket = new WebSocket("ws://127.0.0.1:8080/ws");

        socket.onopen = () => {
            console.log("Websocket succesfully opened");
        };

        socket.onclose = () => {
            console.log("Websocket conection close");
        };

        socket.onerror = () => {
            console.log("Websocket there was an error");
        };

        socket.onmessage = msg => {
            const data = JSON.parse(msg.data);

            switch (data.action) {
                case "CONNECTED_USERS":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users && data.connected_users.length > 0) {
                        data.connected_users.forEach(user => {
                            const li = document.createElement("li");
                            li.appendChild(document.createTextNode(user));
                            ul.appendChild(li);
                        })
                    }
                    break;
                case "NEW_MESSAGE":
                    const chatbox = document.getElementById("output");
                    chatbox.innerHTML += data.message + "<br>";
                    break;
            }
        };

        const userInput = document.getElementById("username");
        userInput.addEventListener("blur", () => {
            const name = userInput.value;
            let jsonData = {};

            jsonData.action = "NEW_USER"
            jsonData.username = name
            jsonData.message = ""

            socket.send(JSON.stringify(jsonData));
        });

        const sendMessage = () => {
            const msg = document.getElementById("message");
            if (msg.value === "" || userInput.value === "") {
                showAlert("Both message & username shall not be empty.");
                return;
            }

            const req = {
                action: "BROADCAST",
                username: userInput.value,
                message: msg.value
            }
            socket.send(JSON.stringify(req))

            // clear input
            msg.value = "";
        };

        const sendBtn = document.getElementById("send_btn");
        sendBtn.addEventListener("click", () => sendMessage());

        const messageInput = document.getElementById("message");
        messageInput.addEventListener("keydown", event => {
            if (event.code == "Enter") {
                if (!socket) {
                    console.log("No connection");
                    return false;
                }
                event.preventDefault();
                event.stopPropagation();
                sendMessage();
            }
        });

        const showAlert = msg => {
            notie.alert({
                type: "error",
                text: msg,
            })
        }
    });
</script>

</html>
